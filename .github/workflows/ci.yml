name: CI pipeline
on:
  pull_request:
  push:
    branches: [main]
    tags: ['v*.*.*']
  workflow_dispatch:
jobs:
  pre_commit:
    name: pre-commit checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: pre-commit/action@v3.0.1
      - uses: pre-commit-ci/lite-action@v1.0.3
        if: always()
  tests:
    name: Testing with pytest
    needs: pre_commit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: python3 -m pip install --upgrade pip
      - name: Get pip cache dir
        id: pip-cache
        run: echo "dir=$(pip cache dir)" >> "$GITHUB_OUTPUT"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install tests dependencies
        run: pip install ".[tests]"
      - name: Testing with pytest
        run: pytest --cov=mdminify --cov-branch --cov-report=xml --cov-report=term-missing tests
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  docs:
    name: Build and publish documentation
    needs: tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Upgrade pip
        run: python3 -m pip install --upgrade pip
      - name: Get pip cache dir
        id: pip-cache
        run: echo "dir=$(pip cache dir)" >> "$GITHUB_OUTPUT"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install documentation dependencies
        run: pip install ".[docs]"
      - name: Build documentation
        run: mkdocs build --strict
      - name: Deploy documentation to GitHub pages
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
